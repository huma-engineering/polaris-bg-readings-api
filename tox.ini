[tox]
skipsdist = true
envlist = lint,py39
source_package = gdm_bg_readings_api
all_sources = {[tox]source_package} tests/ integration-tests/
requires = tox-pip-version
provision_tox_env=provision

[flake8]
max-line-length = 100

[mypy]
namespace_packages=True
ignore_missing_imports=False
disallow_untyped_defs=True

[mypy-waitress,flask_env,sqlalchemy.*,environs,pytest,flask_sqlalchemy,pytest_mock,freezegun.*,_pytest.*,jose,apispec.*,apispec_webframeworks.*,connexion]
ignore_missing_imports = True

[mypy-flask_batteries_included.*,dhosredis,flask]
ignore_missing_imports = True

[testenv]
envdir = {toxworkdir}/py39
pip_version = pip>=21.1
setenv =
         DATABASE_HOST=localhost
         DATABASE_PORT=5432
         DATABASE_USER=gdm-bg-readings-api
         DATABASE_PASSWORD=gdm-bg-readings-api
         DATABASE_NAME=gdm-bg-readings-api
         FLASK_APP=gdm_bg_readings_api/autoapp.py
         ALLOW_DROP_DATA=true
         REDIS_INSTALLED = False
         RABBITMQ_DISABLED = true
         ENVIRONMENT = DEVELOPMENT
         IGNORE_JWT_VALIDATION = True
         SERVER_TIMEZONE = Europe/London
         AUTH0_AUDIENCE = https://dev.sensynehealth.com/
         HS_KEY = secret
         PROXY_URL = localhost
         LOG_FORMAT = COLOUR
         LOG_LEVEL = DEBUG
         NO_PROXY=*
         DHOS_TRUSTOMER_API_HOST=http://dhos-trustomer
         CUSTOMER_CODE=test
         POLARIS_API_KEY=secret

passenv = PIP_EXTRA_INDEX_URL


commands = poetry install -v
           black --check {[tox]source_package} tests/
           isort {[tox]source_package} tests/ --check-only
           mypy --config-file {toxinidir}/tox.ini {[tox]source_package}
           bandit -r {[tox]source_package} -lll
           safety check
           coverage run --source {[tox]source_package} -m py.test {posargs}
           coverage report
           coverage xml -i -o coverage-reports/coverage.xml
allowlist_externals =
        bandit
        black
        coverage
        isort
        mypy
        poetry
        python
        safety
        true
list_dependencies_command = true

[testenv:provision]
envdir={toxworkdir}/.provision

[testenv:lint]
description = Run black, isort, and mypy to clean up source files
commands =
       poetry install
       black {[tox]all_sources}
       isort --profile black {[tox]all_sources}
       mypy --config-file tox.ini {[tox]source_package} tests/

[testenv:openapi]
description = Recreate API specification (openapi.yaml) from Flask blueprint
commands =
    python -m flask create-openapi {toxinidir}/{[tox]source_package}/openapi/openapi.yaml

[testenv:debug]
description = Run last failing unit test and invoke debugger on errors
commands =
    pytest --lf --pdb

[testenv:update]
description = Update poetry lock files
commands = poetry update
